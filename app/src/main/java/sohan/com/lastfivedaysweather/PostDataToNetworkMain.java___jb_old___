package sohan.com.lastfivedaysweather;

import android.content.Context;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.impl.client.DefaultHttpRequestRetryHandler;
import org.apache.http.params.BasicHttpParams;
import org.apache.http.params.HttpConnectionParams;
import org.apache.http.params.HttpParams;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URI;


public class PostDataToNetworkMain {

    public String postMethod(Context context, String conUrl) throws Exception {

       return postMethodV1(context, conUrl);


    }

    private String postMethodV1(Context context, String conUrl)throws Exception {
        String result = null;
        InputStream is = null;

        DefaultHttpClient httpclient = new DefaultHttpClient();

        httpclient.setHttpRequestRetryHandler(new DefaultHttpRequestRetryHandler
                (0, false));
        URI u = new URI(conUrl);
        HttpPost httppost = new HttpPost(u);
        HttpParams httpParameters = new BasicHttpParams();
       // int timeoutConnection = 60000;
        int timeoutConnection = 120000;
        HttpConnectionParams.setConnectionTimeout(httpParameters, timeoutConnection);
        HttpConnectionParams.setSoTimeout(httpParameters, timeoutConnection);
        httppost.setParams(httpParameters);

        //SharedPreferences tokenPreferences = context.getSharedPreferences("tokenPrefs", context.MODE_PRIVATE);
       // SharedPreferences  tokenPreferences = Helper.getPref(context);
        //SharedPreferences.Editor tokenPrefsEditor = tokenPreferences.edit();
       // Boolean saveToken = tokenPreferences.getBoolean("saveToken", false);
       /* if (saveToken == true) {
            httppost.setHeader("ApiKey", tokenPreferences.getString("ApiKey", ""));
            httppost.setHeader("ApiToken", tokenPreferences.getString("ApiToken", ""));
            httppost.setHeader("UserName", tokenPreferences.getString("UserName", ""));
        }*//*else {
            tokenPrefsEditor.clear();
            tokenPrefsEditor.commit();
        }*/

       // httppost.setHeader("Content-Type", "application/json");
       // httppost.setHeader("Accept", "application/json, text/javascript, */*;q=0.01");
        //httppost.setEntity(new ByteArrayEntity(nvps.toString().getBytes("UTF8")));
        HttpResponse response = httpclient.execute(httppost);
        HttpEntity entity = response.getEntity();

        if (entity != null) {
            is = entity.getContent();
            result = getStringfromInputStream(is);
            entity.consumeContent();
        }
        httpclient.getConnectionManager().shutdown();
        return result;
    }

    /**
     * @param is
     *         stream from response object
     * @return String response.
     */
    public String getStringfromInputStream(InputStream is) throws Exception {

        String result = null;

        try {
            BufferedReader reader = new BufferedReader(new InputStreamReader(is, "iso-8859-1"), 8);
            StringBuilder sb = new StringBuilder();
            String line = null;
            while ((line = reader.readLine()) != null) {
                sb.append(line + "\n");
            }
            is.close();
            result = sb.toString();
           /* if (BuildConfig.DEBUG && SmartDostHHP.isLoggerEnabled) {
                SmartDostHHP.getAppLogger().info(TAG, "The response is: " + result);
            }*/
        }
        catch (Exception e) {
            throw e;
        }
        return result;

    }

}